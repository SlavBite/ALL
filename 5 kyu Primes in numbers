"""
Given a positive number n > 1 find the prime factor decomposition of n. The result will be a string with the following form :

 "(p1**n1)(p2**n2)...(pk**nk)"
where a ** b means a to the power of b

with the p(i) in increasing order and n(i) empty if n(i) is 1.

Example: n = 86240 should return "(2**5)(5)(7**2)(11)"
"""

def prime_factors(n):
    
    print(n)
    divisor = 2
    
    count = 0
    string = ""
    while n > 1:
        
        if n % divisor == 0:
            n //= divisor
            count += 1
            
        else:
            if count > 1:                 
                string += "(" + str(divisor) + "**" + str(count) + ")"           
            elif count > 0:
                string += "(" + str(divisor) + ")"
                
            count = 0
            divisor += 1
    else:        
            if count > 1:                 
                string += "(" + str(divisor) + "**" + str(count) + ")"           
            elif count > 0:
                string += "(" + str(divisor) + ")"
    
    return string
